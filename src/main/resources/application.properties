# suppress inspection "SpellCheckingInspection" for whole file
# suppress inspection "Annotator" for whole file
# suppress inspection "UnusedProperty" for whole file
quarkus.native.add-all-charsets=true
quarkus.profile=pgdb
#
# postgres
#
%pgdb.quarkus.datasource.db-kind=postgresql
%pgdb.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/esb_db_main
%pgdb.quarkus.datasource.username=postgres
%pgdb.quarkus.datasource.password=postgres
#
# Oracle
#
%oradb.quarkus.datasource.db-kind=oracle
%oradb.quarkus.datasource.jdbc.url=jdbc:oracle:thin:@//127.0.0.1:1521/RAFI
%oradb.quarkus.datasource.username=P2G_DEV_RAFI
%oradb.quarkus.datasource.password=oracle
#
# liquibase
#
quarkus.liquibase.migrate-at-start=true
%pgdb.quarkus.liquibase.change-log=db/postgres/changelog-master.yml
%oradb.quarkus.liquibase.change-log=db/oracle/changelog-master.yml
#
# hibernate
#
quarkus.hibernate-orm.log.sql=false
esb.infra.persistence.persistAfterCompletion = true
#
# transforming
#
esb.infra.transforming.method.request = lowercase
esb.infra.transforming.method.response = uppercase
esb.infra.transforming.method.second.response = default
#
# matching
#
esb.infra.matching.request=communicationHeader/mid
esb.infra.matching.response=communicationHeader/mid,communicationHeader/reqtId
esb.infra.matching.second.response = communicationHeader/record/0/reqId

# AMQ - P2G
esb.infra.p2g.amq.brokerURL = ssl://*.*.*.*:61617?verifyHostName=false
esb.infra.p2g.amq.username = username
esb.infra.p2g.amq.password = ********
#esb.infra.p2g.amq.trustStorePath = cert/broker/p2g/client.ts
esb.infra.p2g.amq.trustStorePassword = ********
#esb.infra.p2g.amq.keyStorePath = cert/broker/p2g/broker.ks
esb.infra.p2g.amq.keyStorePassword = ********
esb.infra.p2g.amq.request.queue.name = XXX
esb.infra.p2g.amq.response.queue.name = XXX
esb.infra.p2g.amq.second.response.queue.name = XXX
esb.infra.p2g.amq.connectionFactory = amqConnectionFactoryP2G

# AMQ - Vendor
esb.infra.vendor.amq.brokerURL = ssl://*.*.*.*:61617?verifyHostName=false
esb.infra.vendor.amq.username = username
esb.infra.vendor.amq.password = ********
#esb.infra.vendor.amq.trustStorePath = cert/broker/vendor/client.ts
esb.infra.vendor.amq.trustStorePassword = ********
#esb.infra.vendor.amq.keyStorePath = cert/broker/vendor/broker.ks
esb.infra.vendor.amq.keyStorePassword = ********
esb.infra.vendor.amq.request.queue.name = XXX
esb.infra.vendor.amq.response.queue.name = XXX
esb.infra.vendor.amq.connectionFactory = amqConnectionFactoryVendor

# IBM MQ - Vendor
esb.infra.vendor.ibmmq.hostName=*.*.*.*
esb.infra.vendor.ibmmq.port=1414
esb.infra.vendor.ibmmq.queueManager=QM1
esb.infra.vendor.ibmmq.channel=channel
esb.infra.vendor.ibmmq.user=user
esb.infra.vendor.ibmmq.password=********
#esb.infra.vendor.ibmmq.trustStorePath = src/main/resources/cert/ibmmq/vendor/client_truststore.p12
esb.infra.vendor.ibmmq.trustStorePassword = clientpw
#esb.infra.vendor.ibmmq.keyStorePath = src/main/resources/cert/ibmmq/vendor/client_keystore.p12
esb.infra.vendor.ibmmq.keyStorePassword = clientpw
#esb.infra.vendor.ibmmq.cipher =
esb.infra.vendor.ibmmq.response.queue.name = XXX
esb.infra.vendor.ibmmq.request.queue.name = XXX
esb.infra.vendor.ibmmq.connectionFactory = ibmConnectionFactoryVendor


#SFTP - P2G
esb.infra.p2g.sftp.address = 10.206.93.114
esb.infra.p2g.sftp.username = wls12
esb.infra.p2g.sftp.password = wls12
esb.infra.p2g.sftp.privateKeyFile = path/to/privatekey
esb.infra.p2g.sftp.fromFolder = /tmp/feeder
esb.infra.p2g.sftp.archiveFolder = .archive
esb.infra.p2g.sftp.toFolder = /tmp/advice

# splitAlgo = line , xmlTag, jsonTag, delimiter.
esb.infra.p2g.sftp.splitAlgo = line
# spliTtag = number of lines, xml tag name, json tag name, delimiter. (respectively)
esb.infra.p2g.sftp.splitTag = 4
# for splitAlgo = jsonTag
#esb.infra.p2g.sftp.splitTag = $.transactionInformation
#esb.infra.p2g.sftp.updateTags = $.numberOfTransactions=1,$.transactionInformation=2

#
# Rest Request
#
esb.infra.request.rest.grant_type = client_credentials
esb.infra.request.rest.client_id = 01e1971f-5390-43d2-b047-156d98052cff
esb.infra.request.rest.client_secret = 567cfef0-dacb-44a3-aa1a-505b4000fcb3
esb.infra.request.rest.scope = openid
esb.infra.request.rest.username = boss
esb.infra.request.rest.password = boss-pass
esb.infra.request.rest.auth_url = https://api.fusionfabric.cloud/login/v1/t-08d3989f-9113-4105-913a-f4679d6f1b57/oidc/token
esb.infra.request.rest.period = 180000
#esb.infra.request.rest.headers = key1=value1,key2=value2
esb.infra.request.rest.headers = 0

#
# Rest Response
#
esb.infra.response.sync = false
esb.infra.response.secured = true
esb.infra.response.rest.client_id = quarkus-client
esb.infra.response.rest.grant_type = password
esb.infra.response.rest.scope = email profile
esb.infra.response.rest.username = boss
esb.infra.response.rest.password = boss-pass
esb.infra.response.rest.client_secret = 8rp3h18aY98chsxbE33gx2ESRoBvZqoK
esb.infra.response.rest.auth_url = http://localhost:8082/realms/quarkus/protocol/openid-connect/token
esb.infra.response.rest.period = 180000
esb.infra.response.rest.url = http://localhost:8080/response

#
# Infra Routes
#
esb.infra.route.request.enable.test = false
esb.infra.route.request.enable.timerToVendorBasicAuthService = false
esb.infra.route.request.enable.timerToVendorAuthService = false
esb.infra.route.response.enable.timerToVendorAuthService = false
esb.infra.route.request.enable.fromP2gToVendor = false
esb.infra.route.request.enable.fromP2gAMQToVendorAMQ = false
esb.infra.route.response.enable.fromVendorToP2g = false
esb.infra.route.second.response.enable.fromVendorToP2g = false
esb.infra.route.response.enable.fromVendorAMQToP2gAMQ = false
esb.infra.route.request.enable.fromAmqToIbmMq = false
esb.infra.route.response.enable.fromIbmMqToAmq = false
esb.infra.route.request.enable.SftpPwToAmq = false
esb.infra.route.response.enable.AmqToSftpPw = false
esb.infra.route.request.enable.SftpPkToAmq = false
esb.infra.route.response.enable.AmqToSftpPk = false


# Security HTTP
#%prod.quarkus.oidc.auth-server-url=http://localhost:8082/realms/quarkus
#quarkus.oidc.client-id=quarkus-client
#quarkus.oidc.application-type=service
quarkus.http.auth.permission.authenticated.paths=/response,/second_response
quarkus.http.auth.permission.authenticated.policy=authenticated
smallrye.jwt.verify.key.location=http://localhost:8082/realms/quarkus/protocol/openid-connect/certs